<?xml version="1.0" encoding="UTF-8" ?>
<configuration debug="false" packagingData="true">

	<!-- 上下文名称 -->
	<contextName>share</contextName>

	<!-- 存放日志文件路径 -->
	<property name="Log_Home" value="log" />

	<!-- debug -->
	<!-- 按天来算 -->
	<property name="debug_max_History" value="1" />
	<property name="debug_max_FileSize" value="2MB" />

	<!-- info -->
	<!-- 按天来算 -->
	<property name="info_max_History" value="1" />
	<property name="info_max_FileSize" value="2MB" />

	<!-- WARN -->
	<!-- 按天来算 -->
	<property name="warn_max_History" value="1" />
	<property name="warn_max_FileSize" value="2MB" />

	<!-- error -->
	<!-- 按天来算 -->
	<property name="error_max_History" value="1" />
	<property name="error_max_FileSize" value="2MB" />


	<!-- DEBUG级别 -->
	<appender name="FILE_DEBUG"
		class="ch.qos.logback.core.rolling.RollingFileAppender">

		<!-- 级别过滤器 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 设置过滤级别 -->
			<level>DEBUG</level>
			<!-- 用于配置符合过滤条件的操作 -->
			<onMatch>ACCEPT</onMatch>
			<!-- 用于配置不符合过滤条件的操作 -->
			<onMismatch>DENY</onMismatch>
		</filter>
		<Encoding>UTF-8</Encoding>
		<File>${Log_Home}/debug/debug.log</File>
		<!-- 根据时间来制定滚动策略,如果想要按时间,则设为{yyyy-MM-dd_HH} -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>
				${Log_Home}/debug/debug.%d{yyyy-MM-dd}.%i.log
			</FileNamePattern>
			<!-- 多久后自动清楚旧的日志文件,单位:月 -->
			<MaxHistory>${debug_max_History}</MaxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 默认值是 10MB,文档最大值 -->
				<MaxFileSize>${debug_max_FileSize}</MaxFileSize>
			</TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>

		<encoder>
			<Pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} -
				%msg%n</Pattern>
		</encoder>
	</appender>

	<!-- INFO级别 -->
	<appender name="FILE_INFO"
		class="ch.qos.logback.core.rolling.RollingFileAppender">

		<!-- 级别过滤器 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 设置过滤级别 -->
			<level>INFO</level>
			<!-- 用于配置符合过滤条件的操作 -->
			<onMatch>ACCEPT</onMatch>
			<!-- 用于配置不符合过滤条件的操作 -->
			<onMismatch>DENY</onMismatch>
		</filter>
		<Encoding>UTF-8</Encoding>
		<File>${Log_Home}/info/info.log</File>
		<!-- 根据时间来制定滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>
				${Log_Home}/info/info.%d{yyyy-MM-dd}.%i.log
			</FileNamePattern>
			<!-- 多久后自动清楚旧的日志文件,单位:月 -->
			<MaxHistory>${info_max_History}</MaxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 默认值是 10MB,文档最大值 -->
				<MaxFileSize>${info_max_FileSize}</MaxFileSize>
			</TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>

		<encoder>
			<Pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} -
				%msg%n</Pattern>
		</encoder>
	</appender>


	<!-- WARN级别 -->
	<appender name="FILE_WARN"
		class="ch.qos.logback.core.rolling.RollingFileAppender">

		<!-- 级别过滤器 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 设置过滤级别 -->
			<level>WARN</level>
			<!-- 用于配置符合过滤条件的操作 -->
			<onMatch>ACCEPT</onMatch>
			<!-- 用于配置不符合过滤条件的操作 -->
			<onMismatch>DENY</onMismatch>
		</filter>
		<Encoding>UTF-8</Encoding>
		<File>${Log_Home}/warn/warn.log</File>
		<!-- 根据时间来制定滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>
				${Log_Home}/warn/warn.%d{yyyy-MM-dd}.%i.log
			</FileNamePattern>
			<!-- 多久后自动清楚旧的日志文件,单位:月 -->
			<MaxHistory>${warn_max_History}</MaxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 默认值是 10MB,文档最大值 -->
				<MaxFileSize>${warn_max_FileSize}</MaxFileSize>
			</TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>

		<encoder>
			<Pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} -
				%msg%n</Pattern>
		</encoder>
	</appender>

	<!-- ERROR级别 -->
	<appender name="FILE_ERROR"
		class="ch.qos.logback.core.rolling.RollingFileAppender">

		<!-- 级别过滤器 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 设置过滤级别 -->
			<level>ERROR</level>
			<!-- 用于配置符合过滤条件的操作 -->
			<onMatch>ACCEPT</onMatch>
			<!-- 用于配置不符合过滤条件的操作 -->
			<onMismatch>DENY</onMismatch>
		</filter>
		<Encoding>UTF-8</Encoding>
		<File>${Log_Home}/error/error.log</File>
		<!-- 根据时间来制定滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<FileNamePattern>
				${Log_Home}/error/error.%d{yyyy-MM-dd}.%i.log
			</FileNamePattern>
			<!-- 多久后自动清楚旧的日志文件,单位:月 -->
			<MaxHistory>${error_max_History}</MaxHistory>
			<TimeBasedFileNamingAndTriggeringPolicy
				class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!-- 默认值是 10MB,文档最大值 -->
				<MaxFileSize>${error_max_FileSize}</MaxFileSize>
			</TimeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>

		<encoder>
			<Pattern>%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} -
				%msg%n</Pattern>
		</encoder>
	</appender>
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<Target>System.out</Target>
		<encoder>
			<pattern>%date{yyyy-MM-dd HH:mm:ss} %-5level %logger{36} -%n %msg%n
			</pattern>
			<charset>utf-8</charset>
		</encoder>
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>DEBUG</level>
		</filter>
	</appender>
	<!-- 过滤spring和hibernate的日志 -->
	<logger name="org.springframework" level="ERROR" />
	<logger name="org.hibernate.type" level="ALL" />
	<logger name="org.hibernate" level="ERROR" />
	<!-- In production the level should set to INFO -->
	<root level="debug">
		<!-- In production , plz remove this -->
		<!-- <appender-ref ref="FILE_DEBUG" />  -->
		<!-- <appender-ref ref="FILE_INFO" />  -->
		<!-- <appender-ref ref="FILE_WARN" />  -->
		<!-- <appender-ref ref="FILE_ERROR" />  -->
		<!-- 发布版本注释掉这个 -->
		<appender-ref ref="STDOUT" />
	</root>

</configuration>